#!/usr/bin/env perl
use warnings;
use strict;

use constant AUTO_REFRESH => 1;
use constant UDEV_SNAFU => 1;
use constant AUTO_PULL => 1;
use constant STOW_DIR => '/stow';

use constant THUMB => '/dev/disk/by-label/thumb_root';
use constant MOUNT => 'sudo mount -v -t ext4 /dev/disk/by-label/thumb_root /mnt/root.thumb/';
use constant UMOUNT => 'sudo umount -v /mnt/root.thumb/';

if ( AUTO_REFRESH ) {
  if ( -e THUMB ) {
    print THUMB;
    &auto_refresh(THUMB);
  }
}

if ( AUTO_PULL ) {
  print "=> Auto pulling ...\n";
  &auto_pull;
}

sub auto_pull {
  chdir STOW_DIR;
  my @dirs = <*>;
  foreach (@dirs) {
    sleep 1; chdir $_;
    print "$_\n";
    if ( -e '.git/config' ) {
      my $result = `git pull origin master 2>/dev/null`;
      if ( $result =~ /^Already up-to-date/ ) {
	print "."
      } else {
	print "\n==>$_\n";
	print $result;
      }
      system("git commit -a");
      system("git push origin master");
    }
    chdir STOW_DIR;
  }
  ;
  print "\n=> Checking for diffs...\n";
  foreach (@dirs) {
    sleep 1; chdir $_;
    if ( -e '.git/config' ) {
      my $diff = `git diff --name-only`;
      if ( length($diff) > 0 ) {
	print "----------------------\nDIFF: ", length($diff), ", $_\n";
	print $diff;
      }
    }
    chdir STOW_DIR;
  }
  ;
}

sub auto_refresh {
  system( MOUNT );
  if ( UDEV_SNAFU ) {
    system("tdw-snafu-udev");
  }
  system("sudo pacman --sync --refresh");
  system("sudo pacman --sync --sysupgrade --downloadonly");
  system("sudo pacman --sync --sysupgrade");
  print UMOUNT, "\n";
  system UMOUNT;
}
